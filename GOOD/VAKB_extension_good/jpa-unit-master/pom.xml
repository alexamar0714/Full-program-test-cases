<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>com.github.dadrus.jpa-unit</groupId>
  <artifactId>jpa-unit</artifactId>
  <version>0.5.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>JPA Unit</name>
  <description>JUnit extension for simple testing of JPA entities and components</description>

  <url>https://github.com/dadrus/jpa-unit</url>
  <inceptionYear>2016</inceptionYear>

  <properties>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <skipUnitTests>${skipTests}</skipUnitTests>
    <skipIntegrationTests>${skipTests}</skipIntegrationTests>
    <integrationSourceDirectory>src/integrationtest</integrationSourceDirectory>
    <snapshotDependencyAllowed>true</snapshotDependencyAllowed>

    <version.hibernate-jpa-2.1-api>1.0.0.Final</version.hibernate-jpa-2.1-api>
    <version.cdi-api>1.2</version.cdi-api>
    <version.logback>1.2.3</version.logback>
    <version.slf4j>1.7.25</version.slf4j>
    <version.gson>2.8.1</version.gson>
    <version.dbunit>2.5.4</version.dbunit>
    <version.snakeyaml>1.10</version.snakeyaml>
    <version.codemodel>2.6</version.codemodel>
    <version.h2>1.4.196</version.h2>
    <version.eclipselink>2.5.2</version.eclipselink>
    <version.hibernate4>5.4.24.Final</version.hibernate4>
    <version.hibernate5>5.2.8.Final</version.hibernate5>
    <verions.hibernate-ogm>5.2.0.Alpha1</verions.hibernate-ogm>
    <version.sqlite>3.20.0</version.sqlite>
    <version.commons-dbcp2>2.1.1</version.commons-dbcp2>
    <version.deltaspike>1.7.2</version.deltaspike>
    <version.weld>2.3.5.Final</version.weld>
    <version.commons-lang3>3.6</version.commons-lang3>
    <version.guava>23.0</version.guava>
    <version.flywaydb>4.2.0</version.flywaydb>
    <version.liquibase>3.5.3</version.liquibase>
    <version.jta>1.1</version.jta>
    <version.ehcache>2.7.1</version.ehcache>
    <version.cucumber>1.2.5</version.cucumber>
    <version.mongo-driver>3.5.0</version.mongo-driver>
    <version.flapdoodle.embed.mongo>2.0.0</version.flapdoodle.embed.mongo>
    <version.cglib>3.2.5</version.cglib>
    <verions.concordion>2.1.1</verions.concordion>
    <verions.shrinkwrap>1.2.6</verions.shrinkwrap>
    <version.neo4j-jdbc-driver>3.1.0</version.neo4j-jdbc-driver>
    <version.neo4j-cypher-dsl>2.3.1</version.neo4j-cypher-dsl>
    <version.HikariCP>2.7.1</version.HikariCP>
    <version.jgrapht>1.0.1</version.jgrapht>
    <version.liquigraph>3.0.1</version.liquigraph>
    <version.neo4j-harness>3.2.3</version.neo4j-harness>

    <version.powermock>1.7.3</version.powermock>
    <version.junit>4.12</version.junit>
    <version.hamcrest>1.3</version.hamcrest>
    <version.mockito>1.10.19</version.mockito>
    <version.junit-jupiter>5.0.0</version.junit-jupiter>
    <version.junit-vintage>4.12.0</version.junit-vintage>
    <version.junit-platform>1.0.0</version.junit-platform>
    <version.jacoco>0.7.9</version.jacoco>

    <plugin.version.compiler>3.6.1</plugin.version.compiler>
    <plugin.version.resources>3.0.2</plugin.version.resources>
    <plugin.version.source>3.0.1</plugin.version.source>
    <plugin.version.surefire>2.20</plugin.version.surefire>
    <plugin.version.failsafe>2.20</plugin.version.failsafe>
    <plugin.version.jar>3.0.2</plugin.version.jar>
    <plugin.version.javadoc>2.10.4</plugin.version.javadoc>
    <plugin.version.jacoco>${version.jacoco}</plugin.version.jacoco>
    <plugin.version.serviceloader>1.0.7</plugin.version.serviceloader>
    <plugin.version.enforcer>1.4.1</plugin.version.enforcer>
    <plugin.version.pgp>1.6</plugin.version.pgp>
    <plugin.version.shade>3.0.0</plugin.version.shade>
    <plugin.version.nexus-staging>1.6.8</plugin.version.nexus-staging>
    <plugin.version.release>2.5.3</plugin.version.release>
    <plugin.verions.deploy>2.8.2</plugin.verions.deploy>
    <plugin.version.build-helper>3.0.0</plugin.version.build-helper>
  </properties>

  <scm>
    <connection>scm:git:<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="b5d2dcc1f5d2dcc1ddc0d79bd6dad8">[email protected]</a>:dadrus/jpa-unit.git</connection>
    <developerConnection>scm:git:<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="385f514c785f514c504d5a165b5755">[email protected]</a>:dadrus/jpa-unit.git</developerConnection>
    <url>https://github.com/dadrus/jpa-unit.git</url>
    <tag>HEAD</tag>
  </scm>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <ciManagement>
    <system>Travis CI</system>
    <url>https://travis-ci.org/dadrus/jpa-unit</url>
    <notifiers/>
  </ciManagement>

  <developers>
    <developer>
      <name>Dimitrij Drus</name>
      <email><a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="9afefbfee8efe9dafdf7e2b4feff">[email protected]</a></email>
      <timezone>+1</timezone>
      <roles>
        <role>architect</role>
        <role>committer</role>
      </roles>
    </developer>
  </developers>

  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>

  <modules>
    <module>core</module>
    <module>junit4-extension</module>
    <module>junit5-extension</module>
    <module>cucumber</module>
    <module>concordion</module>
    <module>cdi</module>
    <module>rdbms</module>
    <module>mongodb</module>
    <module>neo4j</module>
    <module>integration-test</module>
    <module>bom</module>
  </modules>
  
  <repositories>
    <repository>
      <id>neo4j</id>
      <name>neo4j-repository</name>
      <url>https://m2.neo4j.org/content/repositories/releases</url>
    </repository>
  </repositories>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${plugin.version.compiler}</version>
          <configuration>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${plugin.version.resources}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${plugin.version.surefire}</version>
          <configuration>
            <!-- <argLine>${argLine} -Xms256m -Xmx1024m</argLine> -->
            <aggregate>true</aggregate>
            <skipTests>${skipUnitTests}</skipTests>
            <forkCount>1</forkCount>
            <reuseForks>false</reuseForks>
            <!-- Specific to generate mapping between tests and covered code -->
            <!-- <properties> -->
            <!-- <property> -->
            <!-- <name>listener</name> -->
            <!-- <value>org.sonar.java.jacoco.JUnitListener</value> -->
            <!-- </property> -->
            <!-- </properties> -->
            <excludes>
              <exclude>**/*ManualTest.java</exclude>
              <exclude>**/*IntegrationTest.java</exclude>
            </excludes>
            <systemPropertyVariables>
              <jacoco-agent.destfile>${project.build.directory}/jacoco.exec</jacoco-agent.destfile>
            </systemPropertyVariables>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${plugin.version.failsafe}</version>
          <configuration>
            <!-- <argLine>${argLine} -Xms256m -Xmx1024m</argLine> -->
            <skipTests>${skipIntegrationTests}</skipTests>
            <forkCount>1</forkCount>
            <reuseForks>false</reuseForks>
            <includes>
              <include>**/*IT.java</include>
              <include>**/*ITCase.java</include>
              <include>**/*IntegrationTest.java</include>
              <include>**/*Feature.java</include>
              <include>**/*Fixture.java</include>
            </includes>
            <!-- Specific to generate mapping between tests and covered code -->
            <!-- <properties> -->
            <!-- <property> -->
            <!-- <name>listener</name> -->
            <!-- <value>org.sonar.java.jacoco.JUnitListener</value> -->
            <!-- </property> -->
            <!-- </properties> -->
            <!-- Let's put failsafe reports with surefire to have access to tests failures/success reports in sonar -->
            <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
            <testSourceDirectory>${integrationSourceDirectory}/java</testSourceDirectory>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>${plugin.version.build-helper}</version>
          <executions>
            <execution>
              <id>add-it-test-sources</id>
              <phase>generate-test-sources</phase>
              <goals>
                <goal>add-test-source</goal>
              </goals>
              <configuration>
                <sources>
                  <source>${integrationSourceDirectory}/java</source>
                </sources>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${plugin.version.jar}</version>
          <configuration>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
              <manifestEntries>
                <Project-Version>${project.version}</Project-Version>
                <Build-Time>${maven.build.timestamp}</Build-Time>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${plugin.version.javadoc}</version>
          <configuration>
            <detectJavaApiLink>true</detectJavaApiLink>
            <detectLinks>true</detectLinks>
            <quiet>true</quiet>
          </configuration>
          <executions>
            <execution>
              <id>attach-javadocs</id>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${plugin.version.source}</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${plugin.verions.deploy}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>${plugin.version.release}</version>
          <configuration>
            <autoVersionSubmodules>true</autoVersionSubmodules>
            <tagNameFormat>v${project.version}</tagNameFormat>
            <useReleaseProfile>true</useReleaseProfile>
            <releaseProfiles>release</releaseProfiles>
            <goals>deploy</goals>
          </configuration>
        </plugin>
        <plugin>
          <groupId>eu.somatik.serviceloader-maven-plugin</groupId>
          <artifactId>serviceloader-maven-plugin</artifactId>
          <version>${plugin.version.serviceloader}</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${plugin.version.jacoco}</version>
          <executions>
            <!-- because of powermock usage we cannot just use the on the fly instrumentation to measure coverage of unit 
              test -->
            <execution>
              <id>default-instrument</id>
              <goals>
                <goal>instrument</goal>
              </goals>
            </execution>
            <execution>
              <id>default-restore-instrumented-classes</id>
              <goals>
                <goal>restore-instrumented-classes</goal>
              </goals>
            </execution>
            <execution>
              <id>report</id>
              <phase>prepare-package</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>

            <!-- for integration tests. -->
            <execution>
              <id>prepare-integration-test-agent</id>
              <goals>
                <goal>prepare-agent-integration</goal>
              </goals>
            </execution>

            <execution>
              <id>generate-integration-test-report</id>
              <goals>
                <goal>report-integration</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${plugin.version.enforcer}</version>
          <executions>
            <execution>
              <!-- Make sure maven 3 is used -->
              <id>enforce-maven-3.2</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireMavenVersion>
                    <version>[3.2,)</version>
                  </requireMavenVersion>
                </rules>
                <fail>true</fail>
              </configuration>
            </execution>
            <execution>
              <!-- Make sure Java 1.8 is used -->
              <id>enforce-java-1.8</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireJavaVersion>
                    <version>${maven.compiler.source}</version>
                  </requireJavaVersion>
                </rules>
                <fail>true</fail>
              </configuration>
            </execution>
            <execution>
              <!-- Make sure no SNAPSHOT dependencies are used. Only active if snapshotDependencyAllowed is set to false -->
              <id>enforce-no-snapshots</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <skip>${snapshotDependencyAllowed}</skip>
                <rules>
                  <requireReleaseDeps>
                    <message>No Snapshots Allowed!</message>
                  </requireReleaseDeps>
                  <requireReleaseVersion>
                    <message>No Snapshots Allowed!</message>
                  </requireReleaseVersion>
                </rules>
                <fail>true</fail>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>${plugin.version.pgp}</version>
          <executions>
            <execution>
              <id>sign-artifacts</id>
              <phase>verify</phase>
              <goals>
                <goal>sign</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>${plugin.version.shade}</version>
        </plugin>
        <plugin>
          <groupId>org.sonatype.plugins</groupId>
          <artifactId>nexus-staging-maven-plugin</artifactId>
          <version>${plugin.version.nexus-staging}</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
    </plugins>

    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
      </testResource>
      <testResource>
        <directory>${integrationSourceDirectory}/java</directory>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </testResource>
      <testResource>
        <directory>${integrationSourceDirectory}/resources</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>

  </build>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.hibernate.javax.persistence</groupId>
        <artifactId>hibernate-jpa-2.1-api</artifactId>
        <version>${version.hibernate-jpa-2.1-api}</version>
      </dependency>
      <dependency>
        <groupId>javax.transaction</groupId>
        <artifactId>jta</artifactId>
        <version>${version.jta}</version>
      </dependency>
      <dependency>
        <groupId>javax.enterprise</groupId>
        <artifactId>cdi-api</artifactId>
        <version>${version.cdi-api}</version>
        <optional>true</optional>
      </dependency>
      <dependency>
        <groupId>org.dbunit</groupId>
        <artifactId>dbunit</artifactId>
        <version>${version.dbunit}</version>
        <exclusions>
          <exclusion>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${version.slf4j}</version>
      </dependency>
      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>${version.gson}</version>
      </dependency>
      <dependency>
        <groupId>org.yaml</groupId>
        <artifactId>snakeyaml</artifactId>
        <version>${version.snakeyaml}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-dbcp2</artifactId>
        <version>${version.commons-dbcp2}</version>
      </dependency>
      <dependency>
        <groupId>com.sun.codemodel</groupId>
        <artifactId>codemodel</artifactId>
        <version>${version.codemodel}</version>
      </dependency>
      <dependency>
        <groupId>com.h2database</groupId>
        <artifactId>h2</artifactId>
        <version>${version.h2}</version>
      </dependency>
      <dependency>
        <groupId>org.xerial</groupId>
        <artifactId>sqlite-jdbc</artifactId>
        <version>${version.sqlite}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.persistence</groupId>
        <artifactId>eclipselink</artifactId>
        <version>${version.eclipselink}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.deltaspike.modules</groupId>
        <artifactId>deltaspike-test-control-module-impl</artifactId>
        <version>${version.deltaspike}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.deltaspike.cdictrl</groupId>
        <artifactId>deltaspike-cdictrl-weld</artifactId>
        <version>${version.deltaspike}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.deltaspike.modules</groupId>
        <artifactId>deltaspike-data-module-impl</artifactId>
        <version>${version.deltaspike}</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.weld.se</groupId>
        <artifactId>weld-se-core</artifactId>
        <version>${version.weld}</version>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${version.guava}</version>
      </dependency>
      <dependency>
        <groupId>org.mongodb</groupId>
        <artifactId>mongo-java-driver</artifactId>
        <version>${version.mongo-driver}</version>
      </dependency>
      <dependency>
        <groupId>de.flapdoodle.embed</groupId>
        <artifactId>de.flapdoodle.embed.mongo</artifactId>
        <version>${version.flapdoodle.embed.mongo}</version>
      </dependency>
      <dependency>
        <groupId>net.sf.ehcache</groupId>
        <artifactId>ehcache</artifactId>
        <version>${version.ehcache}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${version.commons-lang3}</version>
      </dependency>
      <dependency>
        <groupId>cglib</groupId>
        <artifactId>cglib</artifactId>
        <version>${version.cglib}</version>
      </dependency>
      <dependency>
        <groupId>org.flywaydb</groupId>
        <artifactId>flyway-core</artifactId>
        <version>${version.flywaydb}</version>
      </dependency>
      <dependency>
        <groupId>org.liquibase</groupId>
        <artifactId>liquibase-core</artifactId>
        <version>${version.liquibase}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${version.logback}</version>
      </dependency>
      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-module-junit4</artifactId>
        <version>${version.powermock}</version>
      </dependency>
      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-api-mockito</artifactId>
        <version>${version.powermock}</version>
      </dependency>
      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-module-junit4-rule</artifactId>
        <version>${version.powermock}</version>
      </dependency>
      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-module-junit4-rule-agent</artifactId>
        <version>${version.powermock}</version>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${version.junit}</version>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-all</artifactId>
        <version>${version.hamcrest}</version>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${version.mockito}</version>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>${version.junit-jupiter}</version>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-engine</artifactId>
        <version>${version.junit-jupiter}</version>
      </dependency>
      <dependency>
        <groupId>org.junit.vintage</groupId>
        <artifactId>junit-vintage-engine</artifactId>
        <version>${version.junit-vintage}</version>
      </dependency>
      <dependency>
        <groupId>org.junit.platform</groupId>
        <artifactId>junit-platform-runner</artifactId>
        <version>${version.junit-platform}</version>
      </dependency>
      <dependency>
        <groupId>org.jacoco</groupId>
        <artifactId>org.jacoco.agent</artifactId>
        <version>${version.jacoco}</version>
      </dependency>
      <dependency>
        <groupId>info.cukes</groupId>
        <artifactId>cucumber-java</artifactId>
        <version>${version.cucumber}</version>
      </dependency>
      <dependency>
        <groupId>info.cukes</groupId>
        <artifactId>cucumber-junit</artifactId>
        <version>${version.cucumber}</version>
      </dependency>
      <dependency>
        <groupId>org.concordion</groupId>
        <artifactId>concordion</artifactId>
        <version>${verions.concordion}</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.shrinkwrap</groupId>
        <artifactId>shrinkwrap-bom</artifactId>
        <version>${verions.shrinkwrap}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.hibernate.ogm</groupId>
        <artifactId>hibernate-ogm-bom</artifactId>
        <version>${verions.hibernate-ogm}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.neo4j</groupId>
        <artifactId>neo4j-jdbc-driver</artifactId>
        <version>${version.neo4j-jdbc-driver}</version>
      </dependency>
      <dependency>
        <groupId>org.neo4j</groupId>
        <artifactId>neo4j-cypher-dsl</artifactId>
        <version>${version.neo4j-cypher-dsl}</version>
      </dependency>
      <dependency>
        <groupId>com.zaxxer</groupId>
        <artifactId>HikariCP</artifactId>
        <version>${version.HikariCP}</version>
      </dependency>
      <dependency>
        <groupId>org.jgrapht</groupId>
        <artifactId>jgrapht-ext</artifactId>
        <version>${version.jgrapht}</version>
      </dependency>
      <dependency>
        <groupId>org.liquigraph</groupId>
        <artifactId>liquigraph-core</artifactId>
        <version>${version.liquigraph}</version>
      </dependency>
      <dependency>
        <groupId>org.neo4j.test</groupId>
        <artifactId>neo4j-harness</artifactId>
        <version>${version.neo4j-harness}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <profiles>
    <profile>
      <id>release</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>

      <properties>
        <snapshotDependencyAllowed>false</snapshotDependencyAllowed>
      </properties>

      <build>
        <plugins>
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <extensions>true</extensions>
            <configuration>
              <serverId>ossrh</serverId>
              <nexusUrl>https://oss.sonatype.org/</nexusUrl>
              <autoReleaseAfterClose>true</autoReleaseAfterClose>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
