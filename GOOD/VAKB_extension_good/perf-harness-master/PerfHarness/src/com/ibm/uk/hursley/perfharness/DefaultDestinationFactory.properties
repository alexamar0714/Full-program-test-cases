########################################################## {COPYRIGHT-TOP} ###
# Copyright 2016 IBM Corporation
#
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the MIT License
# which accompanies this distribution, and is available at
# http://opensource.org/licenses/MIT
########################################################## {COPYRIGHT-END} ###

com.ibm.uk.hursley.perfharness.DefaultDestinationFactory.desc=\
Defines the allocation of destinations amongst multiple WorkerThreads.\n\
These options only control the *names* given to destination and it is up\n\
to the WorkerThread implementation how these names are interpreted.
Examples:\n\
-d CELL\n\
	All threads operate on destination named CELL\n\
-d CELL -dn 3\n\
	destinations are distributed round-robin in the order CELL1..CELL3\n\
-d CELL -db 6 -dn 3\n\
	destinations are distributed round-robin in the order CELL6..CELL8\n\
-d CELL -dx 6 -dn 3\n\
	destinations are distributed round-robin in the order CELL4..CELL6\n\
-d CELL -db 4 -dx 6 -dn 5\n\
	destinations are distributed round-robin in the order CELL4..CELL6 starting with CELL5

d.dflt = DEST
d.desc = Destination prefix.
d.type = java.lang.String
d.xtra = If no other destination parameters are set, then nothing will be appended to this.

db.dflt = 0
db.desc = Multi-destination numeric base.
db.type = java.lang.Integer

dx.dflt = 0
dx.desc = Multi-destination numeric maximum.
dx.type = java.lang.Integer

dn.dflt = 0
dn.desc = Multi-destination numeric range.
dn.type = java.lang.Integer
dn.xtra = If both base and maximum are set, this value is taken to be the starting\n\
point (as opposed to base).

dr.dflt = false
dr.desc = Generate destinations randomly within range specified by db,dn,dx
dr.type = java.lang.Boolean
