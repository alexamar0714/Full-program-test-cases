########################################################## {COPYRIGHT-TOP} ###
# Copyright 2016 IBM Corporation
#
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the MIT License
# which accompanies this distribution, and is available at
# http://opensource.org/licenses/MIT
########################################################## {COPYRIGHT-END} ###

com.ibm.uk.hursley.perfharness.ControlThread.desc=\
Manage the lifecycle of the application and any WorkerThreads.\n\

nt.dflt = 1
nt.desc = Number of WorkerThreads.
nt.type = java.lang.Integer

rl.dflt = 60
rl.desc = Run length in seconds.
rl.type = java.lang.Integer
rl.xtra = Setting this to 0 will disable the timer and run forever.

id.dflt = 
id.desc = Process identifier.
id.type = java.lang.String
id.xtra = If set, this will be displayed in the statistics reporting.  This is\n\
of use if you have to merge the output of more than one instance of the tool.

su.dflt = true
su.desc = Display final summary.
su.type = java.lang.Boolean
su.xtra = This setting is independent of the periodic statistics reporting.
su.hide = true

wc.dflt = 1
wc.desc = WorkerThread parallel start count.
wc.type = java.lang.Integer
wc.xtra = This controls the number of workers that can be started in parallel.\n\
Requires -wp true.
wc.hide = true

wi.dflt = 1000
wi.desc = WorkerThread start interval (ms).
wi.type = java.lang.Integer
wi.xtra = This controls the pause between starting multiple threads.
wi.hide = true

wp.dflt = false
wp.desc = Use parallel thread startup (fast).
wp.type = java.lang.Boolean
wp.xtra = Allows multiple threads to be started in parallel. 

wt.dflt = 30
wt.desc = WorkerThread start timeout (s).
wt.type = java.lang.Integer
wt.xtra = This controls the time to wait for any worker thread to start.
wt.hide = true

wk.dflt = 120
wk.desc = Shutdown wait (s).
wk.type = java.lang.Integer
wk.xtra = The application will wait this long for WorkerThreads to shutdown before\n\
exiting anyway.
wk.hide = true

sh.dflt = true
sh.desc = Use signal handler to trap SIGINT (CTRL-C).
sh.type = java.lang.Boolean
sh.hide = true

ct.dflt = ControlThread
ct.desc = ControlThread instance to invoke in this application.
ct.type = com.ibm.uk.hursley.perfharness.ControlThread
ct.hide = true

so.dflt = 0
so.desc = Starts a socket shutdown thread on port specified
so.xtra = Starts thread listening on the port specified, if zero no thread started.\n\
Once thread receives any data on socket a shutdown is signalled.
so.type = java.lang.Integer
so.hide = true
