########################################################## {COPYRIGHT-TOP} ###
# Copyright 2016 IBM Corporation
#
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the MIT License
# which accompanies this distribution, and is available at
# http://opensource.org/licenses/MIT
########################################################## {COPYRIGHT-END} ###
com.ibm.uk.hursley.perfharness.jms.providers.WebSphereMQ.desc=\
Settings for direct connection to a WMQ broker.\n\
This allows the tool to be run directly against this provider without the need\n\
for JNDI.  Note that this module inherits from JNDI module so those parameters\n\
are still applicable and that all parameters of this module be ignored if you\n\
do use JNDI.

ju.dflt = true
ju.desc = Use unique-queue-per-subscriber.
ju.type = java.lang.Boolean

jh.dflt = localhost
jh.desc = DNS/IP of provider host machine.
jh.type = java.lang.String

jp.dflt = 1414
jp.desc = Port of provider host machine.
jp.type = java.lang.Integer

jc.dflt = SYSTEM.DEF.SVRCONN
jc.desc = WMQ Channel to connect to.
jc.type = java.lang.String

jb.dflt = QM
jb.desc = WMQ queue manager to connect to.
jb.type = java.lang.String

jt.dflt = mqc
jt.desc = WMQ transport (mqb, mqc).
jt.type = java.lang.String
jt.xtra = "mqb" is local-bindings connections, "mqc" is TCP/IP connections.

bt.dflt = std
bt.desc = WMQ trust level
bt.type = java.lang.String
bt.xtra = "std" is standard (default), "fp" is fastpath, "is" is isolated.

jg.dflt = false
jg.desc = Communicate with non JMS application (targetClient=1)
jg.type = java.lang.Boolean
jg.xtra = Setting this to true will cause the JMS client to send or\n\
recieve messages without RFH2 headers.  This is primarily for communication\n\
with MQI applications.  Certain JMS functionality is not available.
jg.hide = true

js.dflt = false
js.desc = Use JMS reliable messaging.
js.type = java.lang.Boolean
js.hide = true
js.xtra = The queue manager needs altering before this will be enabled.

jq.dflt = SYSTEM.BROKER.DEFAULT.STREAM
jq.desc = Publish queue.
jq.type = java.lang.String
jq.xtra = This defines the stream for a WMQ broker, and can therefore be set on both publishers\n\
and subscribers.  Note that publications cannot cross streams.  Never cross the streams!

ja.dflt = -1
ja.desc = Publish acknowledgement interval (-1 = jms default).
ja.type = java.lang.Integer
ja.xtra = The maximum messages that can be placed\n\
on the publish queue is 1.5 * ja, the publisher will then be waiting\n\
for an acknowledgement from the broker.

jx.dflt = false
jx.desc = Enable optimistic pub-sub.
jx.type = java.lang.Boolean
jx.hide = true

jo.dflt = true
jo.desc = Use JMS connection pooling.
jo.type = java.lang.Boolean
jo.hide = true

jr.dflt = false
jr.desc = Use (older) QueueSubscriptionStore mechanism.
jr.type = java.lang.Boolean
jr.hide = true
jr.xtra = Forces compatibility with WMQ 5.3 older than CSD 6.

je.dflt = true
je.desc = Auto-create topics using ME01 (when using JNDI).
je.type = java.lang.Boolean
je.hide = true
je.xtra = If false, the Topic object must already be bound.
je.long = autoCreateTopics

jl.dflt = 
jl.desc = SSLCipherSuite name
jl.type = java.lang.String
jl.xtra = This controls the SSL encryption methodology.  RTFM or developerWorks for details.

jf.dflt = false
jf.desc = Use Fire and Forget/Streaming on the Message Sends/Publishes
jf.type = java.lang.Boolean
jf.xtra = Forces the Producer to use Streaming regardless of the values on the underlying MQ Queue or Topic

jy.dflt = false
jy.desc = Use Read Ahead Buffering when Receiving/Subscribing messages
jy.type = java.lang.Boolean
jy.xtra = Forces the Consumer to use Read Ahead buffering regardless of the values on the underlying MQ Queue or Topic
 
jv.dflt = -1
jv.desc = Use the client in version mode
jv.type = java.lang.Integer
jv.xtra = Force this client to run at a specific level (using WMQ_PROVIDER_VERSION)

jrc.dflt =
jrc.desc = Switch the client's codepage conversion from client (CLIENT_MSG) to QM (QMGR)
jrc.type = java.lang.String
jrc.xtra = Tell the system where to do the codepage conversion
