/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.nbandroid.netbeans.gradle.v2.sdk.ui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JPanel;
import org.openide.WizardDescriptor;

/**
 * @author ArSi
 */
public final class SDKVisualPanelMode extends JPanel implements ActionListener {

    public static final String TYPE_CHANGE = "TYPE_CHANGE";

    /**
     * Creates new form SDKVisualPanel1
     */
    public SDKVisualPanelMode() {
        initComponents();
        putClientProperty(WizardDescriptor.PROP_CONTENT_SELECTED_INDEX, 0);
        putClientProperty(WizardDescriptor.PROP_AUTO_WIZARD_STYLE, true);
        putClientProperty(WizardDescriptor.PROP_CONTENT_DISPLAYED, true);
        putClientProperty(WizardDescriptor.PROP_CONTENT_NUMBERED, true);
        download.addActionListener(this);
        local.addActionListener(this);
    }

    @Override
    public String getName() {
        return "Select mode";
    }

    public boolean isLocalSelected() {
        return local.isSelected();
    }

    public boolean isDownloadSelected() {
        return download.isSelected();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        local = new javax.swing.JRadioButton();
        download = new javax.swing.JRadioButton();

        setMaximumSize(new java.awt.Dimension(611, 154));
        setMinimumSize(new java.awt.Dimension(611, 154));
        setPreferredSize(new java.awt.Dimension(611, 154));

        buttonGroup1.add(local);
        org.openide.awt.Mnemonics.setLocalizedText(local, org.openide.util.NbBundle.getMessage(SDKVisualPanelMode.class, "SDKVisualPanelMode.local.text")); // NOI18N

        buttonGroup1.add(download);
        org.openide.awt.Mnemonics.setLocalizedText(download, org.openide.util.NbBundle.getMessage(SDKVisualPanelMode.class, "SDKVisualPanelMode.download.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(181, 181, 181)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(local)
                    .addComponent(download)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addComponent(local)
                .addGap(8, 8, 8)
                .addComponent(download))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton download;
    private javax.swing.JRadioButton local;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        firePropertyChange(TYPE_CHANGE, false, true);
    }
}
