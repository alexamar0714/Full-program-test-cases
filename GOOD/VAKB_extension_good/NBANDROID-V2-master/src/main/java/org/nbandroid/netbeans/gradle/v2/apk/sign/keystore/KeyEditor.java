/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.nbandroid.netbeans.gradle.v2.apk.sign.keystore;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.Arrays;
import org.nbandroid.netbeans.gradle.v2.apk.ApkUtils;
import org.openide.DialogDescriptor;

/**
 *
 * @author arsi
 */
public class KeyEditor extends javax.swing.JPanel implements KeyListener {

    private DialogDescriptor descriptor;

    /**
     * Creates new form KeyEditor
     */
    public KeyEditor() {
        initComponents();
        passwd1.setText("");
        passwd2.setText("");
        passwd1.addKeyListener(this);
        passwd2.addKeyListener(this);
        alias.addKeyListener(this);
        firstAndLastName.addKeyListener(this);
        organizationUnit.addKeyListener(this);
        organization.addKeyListener(this);
        city.addKeyListener(this);
        stateOrProvince.addKeyListener(this);
        countryCode.addKeyListener(this);
    }

    public KeyEditor(KeyListener listener) {
        initComponents();
        passwd1.setText("");
        passwd2.setText("");
        passwd1.addKeyListener(listener);
        passwd2.addKeyListener(listener);
        alias.addKeyListener(listener);
        firstAndLastName.addKeyListener(listener);
        organizationUnit.addKeyListener(listener);
        organization.addKeyListener(listener);
        city.addKeyListener(listener);
        stateOrProvince.addKeyListener(listener);
        countryCode.addKeyListener(listener);
    }

    public void setDescriptor(DialogDescriptor descriptor) {
        this.descriptor = descriptor;
        keyReleased(null);
    }

    @Override
    public void setEnabled(boolean enable) {
        super.setEnabled(enable);
        alias.setEnabled(enable);
        passwd1.setEnabled(enable);
        passwd2.setEnabled(enable);
        validityYears.setEnabled(enable);
        firstAndLastName.setEnabled(enable);
        organizationUnit.setEnabled(enable);
        organization.setEnabled(enable);
        city.setEnabled(enable);
        stateOrProvince.setEnabled(enable);
        countryCode.setEnabled(enable);
    }

    public ApkUtils.DN getDn() {
        return new ApkUtils.DN(alias.getText(), passwd1.getPassword(), (int) validityYears.getValue(), firstAndLastName.getText(), organizationUnit.getText(), organization.getText(), city.getText(), stateOrProvince.getText(), countryCode.getText());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        alias = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        passwd1 = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        passwd2 = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        validityYears = new javax.swing.JSpinner();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        firstAndLastName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        organizationUnit = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        organization = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        city = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        stateOrProvince = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        countryCode = new javax.swing.JTextField();
        error = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(KeyEditor.class, "KeyEditor.border.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(KeyEditor.class, "KeyEditor.jLabel1.text")); // NOI18N

        alias.setText(org.openide.util.NbBundle.getMessage(KeyEditor.class, "KeyEditor.alias.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(KeyEditor.class, "KeyEditor.jLabel2.text")); // NOI18N

        passwd1.setText(org.openide.util.NbBundle.getMessage(KeyEditor.class, "KeyEditor.passwd1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(KeyEditor.class, "KeyEditor.jLabel3.text")); // NOI18N

        passwd2.setText(org.openide.util.NbBundle.getMessage(KeyEditor.class, "KeyEditor.passwd2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(KeyEditor.class, "KeyEditor.jLabel4.text")); // NOI18N

        validityYears.setModel(new javax.swing.SpinnerNumberModel(25, 1, 100, 1));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(KeyEditor.class, "KeyEditor.jPanel1.border.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(KeyEditor.class, "KeyEditor.jLabel5.text")); // NOI18N

        firstAndLastName.setText(org.openide.util.NbBundle.getMessage(KeyEditor.class, "KeyEditor.firstAndLastName.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(KeyEditor.class, "KeyEditor.jLabel6.text")); // NOI18N

        organizationUnit.setText(org.openide.util.NbBundle.getMessage(KeyEditor.class, "KeyEditor.organizationUnit.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(KeyEditor.class, "KeyEditor.jLabel7.text")); // NOI18N

        organization.setText(org.openide.util.NbBundle.getMessage(KeyEditor.class, "KeyEditor.organization.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel8, org.openide.util.NbBundle.getMessage(KeyEditor.class, "KeyEditor.jLabel8.text")); // NOI18N

        city.setText(org.openide.util.NbBundle.getMessage(KeyEditor.class, "KeyEditor.city.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel9, org.openide.util.NbBundle.getMessage(KeyEditor.class, "KeyEditor.jLabel9.text")); // NOI18N

        stateOrProvince.setText(org.openide.util.NbBundle.getMessage(KeyEditor.class, "KeyEditor.stateOrProvince.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel10, org.openide.util.NbBundle.getMessage(KeyEditor.class, "KeyEditor.jLabel10.text")); // NOI18N

        countryCode.setText(org.openide.util.NbBundle.getMessage(KeyEditor.class, "KeyEditor.countryCode.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(firstAndLastName)
                    .addComponent(organizationUnit)
                    .addComponent(organization)
                    .addComponent(city)
                    .addComponent(stateOrProvince)
                    .addComponent(countryCode))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(firstAndLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(organizationUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(organization, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(city, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(stateOrProvince, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(countryCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        error.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/nbandroid/netbeans/gradle/v2/sdk/ui/warning-badge.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(error, org.openide.util.NbBundle.getMessage(KeyEditor.class, "KeyEditor.error.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(error)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2))
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(alias)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(passwd1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(passwd2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(validityYears, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {passwd1, passwd2});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(alias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(error)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(validityYears, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(passwd2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(passwd1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(234, 234, 234))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField alias;
    private javax.swing.JTextField city;
    private javax.swing.JTextField countryCode;
    private javax.swing.JLabel error;
    private javax.swing.JTextField firstAndLastName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField organization;
    private javax.swing.JTextField organizationUnit;
    private javax.swing.JPasswordField passwd1;
    private javax.swing.JPasswordField passwd2;
    private javax.swing.JTextField stateOrProvince;
    private javax.swing.JSpinner validityYears;
    // End of variables declaration//GEN-END:variables

    @Override
    public void keyTyped(KeyEvent e) {
    }

    @Override
    public void keyPressed(KeyEvent e) {
    }

    @Override
    public void keyReleased(KeyEvent e) {
        boolean passwdOk = Arrays.equals(passwd1.getPassword(), passwd2.getPassword()) && passwd1.getPassword().length >= 6;
        error.setVisible(!passwdOk);
        boolean fieldsOk = alias.getText().length() > 0 && firstAndLastName.getText().length() > 0 && organizationUnit.getText().length() > 0
                && organization.getText().length() > 0 && city.getText().length() > 0 && countryCode.getText().length() > 0;

        boolean ok = passwdOk && fieldsOk;
        if(descriptor!=null){
            descriptor.setValid(ok);
        }
    }
}
