/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.nbandroid.netbeans.gradle.v2.apk.sign.keystore;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.security.KeyStore;
import java.security.KeyStoreException;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.DefaultComboBoxModel;
import org.nbandroid.netbeans.gradle.v2.apk.ApkUtils;
import org.openide.DialogDescriptor;
import org.openide.util.Exceptions;

/**
 *
 * @author arsi
 */
public class EditKeyStore extends javax.swing.JPanel implements ActionListener {

    private DialogDescriptor descriptor = null;
    private final KeyStore keyStore;
    /**
     * Creates new form EditKeyStore
     */
    public EditKeyStore(KeyStore keyStore, String alias) {
        initComponents();
        this.keyStore = keyStore;
        try {
            ArrayList<String> list = Collections.list(keyStore.aliases());
            aliases.setModel(new DefaultComboBoxModel<>(list.toArray(new String[list.size()])));
            aliases.setSelectedItem(alias);
        } catch (KeyStoreException ex) {
            Exceptions.printStackTrace(ex);
        }
        useExisting.addActionListener(this);
        createNew.addActionListener(this);


    }

    public void setDescriptor(DialogDescriptor descriptor) {
        this.descriptor = descriptor;
    }

    public boolean isNewKey() {
        return createNew.isSelected();
    }

    public String getAliasName() {
        return (String) aliases.getSelectedItem();
    }

    public ApkUtils.DN getNewDN() {
        return keyEditor.getDn();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        useExisting = new javax.swing.JRadioButton();
        aliases = new javax.swing.JComboBox<>();
        createNew = new javax.swing.JRadioButton();
        keyEditor = new org.nbandroid.netbeans.gradle.v2.apk.sign.keystore.KeyEditor();

        buttonGroup1.add(useExisting);
        useExisting.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(useExisting, org.openide.util.NbBundle.getMessage(EditKeyStore.class, "EditKeyStore.useExisting.text")); // NOI18N

        aliases.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        buttonGroup1.add(createNew);
        org.openide.awt.Mnemonics.setLocalizedText(createNew, org.openide.util.NbBundle.getMessage(EditKeyStore.class, "EditKeyStore.createNew.text")); // NOI18N

        keyEditor.setBorder(null);
        keyEditor.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(useExisting)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aliases, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(createNew)
                            .addComponent(keyEditor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(aliases, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(useExisting))
                .addGap(18, 18, 18)
                .addComponent(createNew)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(keyEditor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> aliases;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton createNew;
    private org.nbandroid.netbeans.gradle.v2.apk.sign.keystore.KeyEditor keyEditor;
    private javax.swing.JRadioButton useExisting;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        if (useExisting.isSelected()) {
            aliases.setEnabled(true);
            keyEditor.setEnabled(false);
            keyEditor.setDescriptor(null);
            descriptor.setValid(true);
        } else {
            aliases.setEnabled(false);
            keyEditor.setEnabled(true);
            keyEditor.setDescriptor(descriptor);
        }
    }

}
