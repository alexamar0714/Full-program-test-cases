/*
 *    Copyright 2003, 2004, 2005, 2006 Research Triangle Institute
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 */

/* Generated by Together */

package org.cidrz.webapp.dynasite.rules;

import org.cidrz.webapp.dynasite.exception.LoggingException;

import java.util.ArrayList;
import java.util.List;

public class OutcomeException extends LoggingException {
    private List nestedExceptions = null;
    private Outcome outcome = null;

    public OutcomeException() {
        super();
    }

    public OutcomeException(Outcome outcome) {
        super();
        this.outcome = outcome;
    }

    public List getAllOutcomes() {
        List outcomes = new ArrayList();
        if (this.outcome != null) {
            outcomes.add(outcome);
        }
        if (nestedExceptions != null && !nestedExceptions.isEmpty()) {
            OutcomeException nestedEx;
            for (int i = 0; i < nestedExceptions.size(); i++) {
                nestedEx = (OutcomeException) nestedExceptions.get(i);
                outcomes.addAll(nestedEx.getAllOutcomes());
            }
        }
        return outcomes;
    }


    public void add(OutcomeException outcomeException) {
        if (this.nestedExceptions == null) {
            this.nestedExceptions = new ArrayList();
        }
        this.nestedExceptions.add(outcomeException);
    }

}
