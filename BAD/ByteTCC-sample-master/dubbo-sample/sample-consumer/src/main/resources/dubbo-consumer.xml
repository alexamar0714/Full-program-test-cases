<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context-3.0.xsd
          http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
          http://code.alibabatech.com/schema/dubbo 
		  http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

	<dubbo:application name="sample-consumer" />
	<dubbo:provider timeout="15000" />
	<dubbo:consumer check="false" timeout="15000" />
	<dubbo:protocol name="dubbo" port="30881" />
	<dubbo:registry address="localhost:2181" protocol="zookeeper" />

	<dubbo:reference id="remoteAccountService" interface="com.bytesvc.service.IAccountService" group="org.bytesoft.bytetcc"
		filter="compensable" loadbalance="compensable" cluster="failfast" retries="0" />

	<!-- tcc型service可被远程consumer当做普通service调用, 此时： -->
	<!-- 1、全局事务发起方为provider，即consumer不传播事务上下文. -->
	<!-- 2、若consumer参与事务（无论是普通事务还是tcc事务），则其与provider端事务属于两个独立的事务，一致性无法保证. -->
	<!-- 注意：除非consumer不参与事务（无论是普通事务还是tcc事务），否则应该调用tcc型远程service，而不是远程service -->
	<dubbo:reference id="normalAccountService" interface="com.bytesvc.service.IAccountService" cluster="failfast"
		retries="0" />

</beans>
